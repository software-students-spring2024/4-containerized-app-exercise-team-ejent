# mac junk
.DS_Store

# visual studio code junk
.vscode/
.vscode/settings.json

# emacs backups
*~

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
machine-learning-client/myenv/pyvenv.cfg
machine-learning-client/myenv/bin/activate
machine-learning-client/myenv/bin/activate.csh
machine-learning-client/myenv/bin/activate.fish
machine-learning-client/myenv/bin/Activate.ps1
machine-learning-client/myenv/bin/black
machine-learning-client/myenv/bin/blackd
machine-learning-client/myenv/bin/convert-caffe2-to-onnx
machine-learning-client/myenv/bin/convert-onnx-to-caffe2
machine-learning-client/myenv/bin/f2py
machine-learning-client/myenv/bin/fonttools
machine-learning-client/myenv/bin/get_gprof
machine-learning-client/myenv/bin/get_objgraph
machine-learning-client/myenv/bin/imageio_download_bin
machine-learning-client/myenv/bin/imageio_remove_bin
machine-learning-client/myenv/bin/import_pb_to_tensorboard
machine-learning-client/myenv/bin/isort
machine-learning-client/myenv/bin/isort-identify-imports
machine-learning-client/myenv/bin/isympy
machine-learning-client/myenv/bin/markdown_py
machine-learning-client/myenv/bin/markdown-it
machine-learning-client/myenv/bin/normalizer
machine-learning-client/myenv/bin/pip
machine-learning-client/myenv/bin/pip3
machine-learning-client/myenv/bin/pip3.9
machine-learning-client/myenv/bin/py.test
machine-learning-client/myenv/bin/pyftmerge
machine-learning-client/myenv/bin/pyftsubset
machine-learning-client/myenv/bin/pygmentize
machine-learning-client/myenv/bin/pylint
machine-learning-client/myenv/bin/pylint-config
machine-learning-client/myenv/bin/pyreverse
machine-learning-client/myenv/bin/pytest
machine-learning-client/myenv/bin/python
machine-learning-client/myenv/bin/python3
machine-learning-client/myenv/bin/python3.9
machine-learning-client/myenv/bin/saved_model_cli
machine-learning-client/myenv/bin/symilar
machine-learning-client/myenv/bin/tensorboard
machine-learning-client/myenv/bin/tf_upgrade_v2
machine-learning-client/myenv/bin/tflite_convert
machine-learning-client/myenv/bin/toco
machine-learning-client/myenv/bin/toco_from_protos
machine-learning-client/myenv/bin/torchrun
machine-learning-client/myenv/bin/tqdm
machine-learning-client/myenv/bin/ttx
machine-learning-client/myenv/bin/undill
machine-learning-client/myenv/bin/wheel
machine-learning-client/myenv/share/man/man1/isympy.1
machine-learning-client/myenv/share/man/man1/ttx.1
